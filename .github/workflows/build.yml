name: Build Application with Briefcase

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            platform: macOS
            output_name: "Apple Music History Converter-macOS"
            build_path: "build/apple-music-history-converter/macos/app/"
          - os: windows-latest
            platform: windows
            output_name: "Apple Music History Converter-Windows"
            build_path: "build/apple-music-history-converter/windows/app/"
          - os: ubuntu-latest
            platform: linux
            output_name: "Apple Music History Converter-Linux"
            build_path: "build/apple-music-history-converter/linux/app/"

    steps:
    # Initial Setup
    - uses: actions/checkout@v4
      with:
        clean: true

    # Build Environment Setup
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # Dependencies
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install briefcase

    # Linux specific dependencies
    - name: Install Linux system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgirepository1.0-dev \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf2.0-dev \
          libffi-dev \
          shared-mime-info

    # macOS specific setup for code signing
    - name: Import Code Signing Certificate (macOS)
      if: runner.os == 'macOS'
      uses: apple-actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
        p12-password: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
      continue-on-error: true  # Don't fail if certificates aren't available

    # Build with Briefcase
    - name: Create Briefcase app
      run: |
        python build.py create

    - name: Build Briefcase app
      run: |
        python build.py build

    - name: Package Briefcase app
      run: |
        python build.py package

    # Package artifacts for upload
    - name: Package macOS app
      if: runner.os == 'macOS'
      run: |
        cd "build/apple-music-history-converter/macos/"
        ditto -c -k --keepParent "Apple Music History Converter.app" "../../../Apple_Music_History_Converter_macOS.zip"

    - name: Package Windows app
      if: runner.os == 'Windows'
      run: |
        cd "build/apple-music-history-converter/windows/"
        7z a "../../../Apple_Music_History_Converter_Windows.zip" "Apple Music History Converter.exe"

    - name: Package Linux app
      if: runner.os == 'Linux'
      run: |
        cd "build/apple-music-history-converter/linux/"
        tar -czf "../../../Apple_Music_History_Converter_Linux.tar.gz" "Apple Music History Converter"

    # Artifact Upload
    - name: Upload macOS artifact
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: Apple_Music_History_Converter_macOS.zip
        if-no-files-found: error

    - name: Upload Windows artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: Apple_Music_History_Converter_Windows.zip
        if-no-files-found: error

    - name: Upload Linux artifact
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: Apple_Music_History_Converter_Linux.tar.gz
        if-no-files-found: error

  # Release Creation
  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      # Create new release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
          draft: false
          prerelease: false
          body: |
            **Apple Music History Converter ${{ github.ref_name }}**
            
            Built with Briefcase for native app experiences across platforms.
            
            ### Downloads and Installation
            
            **macOS (Apple Silicon/Intel)**
            - Download `Apple_Music_History_Converter_macOS.zip`
            - Extract the zip file
            - Right-click the app and select "Open" (required for first-time apps)
            - If you get a security warning, go to System Settings > Privacy & Security and click "Open Anyway"
            
            **Windows (x64)**
            - Download `Apple_Music_History_Converter_Windows.zip`
            - Extract the zip file and run the executable
            - If you get a SmartScreen warning, click "More info" and "Run anyway"
            
            **Linux (x64)**
            - Download `Apple_Music_History_Converter_Linux.tar.gz`
            - Extract: `tar -xzf Apple_Music_History_Converter_Linux.tar.gz`
            - Run: `./Apple\ Music\ History\ Converter`
            
            ### Usage Instructions
            1. Export your Apple Music data:
               - From Apple Music app: File > Library > Export Library (XML format)
               - Or use Apple's Privacy & Data tool to export CSV files
            
            2. Run the converter:
               - Launch the application
               - Select your CSV or XML file
               - Choose conversion options
               - Select output location
               - Click "Convert" to process your library
            
            ### Features
            - Support for multiple Apple Music export formats
            - Dual search providers: MusicBrainz (offline) and iTunes API (online)
            - Fast, accurate track matching with fallback capabilities
            - Modern, user-friendly interface with progress tracking
            - Cross-platform compatibility
            - Automatic encoding detection for international character sets
            - Pause/resume functionality for large files
            
            ### Requirements
            - macOS 11.0 (Big Sur) or later
            - Windows 10 or later
            - Linux with GTK 3.0 or later
            
            ### Notes
            - All platforms include native app bundles built with Briefcase
            - macOS version is ad-hoc signed for development
            - For any issues, please create a ticket in the Issues section