name: Build Application

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            output_name: "Apple Music History Converter-macOS"
          - os: windows-latest
            output_name: "Apple Music History Converter-Windows"

    steps:
    # Initial Setup
    - uses: actions/checkout@v4
      with:
        clean: true

    # Build Environment Setup
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # Dependencies
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests pyinstaller sv-ttk pillow

    # Build for macOS
    - name: Build with PyInstaller (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        # Use the spec file for macOS build
        pyinstaller "Apple Music History Converter.spec"
        cd dist
        # Zip the .app bundle
        zip -r "Apple Music History Converter-macOS.zip" "Apple Music History Converter.app"

    # Build for Windows
    - name: Build with PyInstaller (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        # Convert icns to ico using Python
        python -c "
        from PIL import Image
        import os
        if not os.path.exists('images/aphc.ico'):
            img = Image.open('images/aphc.icns')
            img.save('images/aphc.ico', format='ICO', sizes=[(256, 256), (128, 128), (64, 64), (32, 32), (16, 16)])
        "
        # Create a Windows spec file with explicit tkinter imports
        @'
        # -*- mode: python ; coding: utf-8 -*-

        a = Analysis(
            ['apple_music_play_history_converter.py'],
            pathex=[],
            binaries=[],
            datas=[],
            hiddenimports=['tkinter', 'tkinter.ttk', 'sv_ttk', '_tkinter', 'Tkinter'],
            hookspath=[],
            hooksconfig={},
            runtime_hooks=[],
            excludes=[],
            noarchive=False,
        )
        pyz = PYZ(a.pure)

        exe = EXE(
            pyz,
            a.scripts,
            a.binaries,
            a.datas,
            [],
            name='Apple Music History Converter-Windows',
            debug=False,
            bootloader_ignore_signals=False,
            strip=False,
            upx=True,
            upx_exclude=[],
            runtime_tmpdir=None,
            console=False,
            disable_windowed_traceback=False,
            argv_emulation=False,
            target_arch=None,
            codesign_identity=None,
            entitlements_file=None,
            icon=['images/aphc.ico'],
        )
        '@ | Out-File -FilePath win_build.spec -Encoding utf8
        
        # Build with the custom spec file
        pyinstaller win_build.spec

    # Artifact Upload
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: |
          dist/*.zip
          dist/*.exe
        if-no-files-found: error

  # Release Creation
  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      # Delete existing release and tag
      - name: Delete existing release
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: v2.0.1
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true

      # Create new release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
          draft: true
          prerelease: false
          name: "v2.0.1"
          tag_name: "v2.0.1"
          body: |
            **Apple Music History Converter v2.0.1**
            
            ### Downloads and Installation
            
            **macOS (Apple Silicon/Intel)**
            - Download `Apple Music History Converter-macOS.zip`
            - Extract the zip file
            - Right-click the app and select "Open" (required for unsigned apps)
            - If you get a security warning, go to System Settings > Privacy & Security and click "Open Anyway"
            
            **Windows (x64)**
            - Download `Apple Music History Converter-Windows.exe`
            - Run the executable
            - If you get a SmartScreen warning, click "More info" and "Run anyway"
            
            **Linux Users**
            To compile from source:
            ```bash
            # Clone the repository
            git clone https://github.com/nerveband/Apple-Music-Play-History-Converter.git
            cd Apple-Music-Play-History-Converter
            
            # Create a virtual environment (recommended)
            python -m venv venv
            source venv/bin/activate  # On Linux/macOS
            
            # Install dependencies
            pip install pandas requests
            
            # Run the script
            python apple_music_play_history_converter.py
            ```
            
            ### Usage Instructions
            1. Export your Apple Music Library:
               - Open Apple Music
               - Go to File > Library > Export Library
               - Save the XML file somewhere convenient
            
            2. Run the converter:
               - Launch the application
               - Click "Select File" to choose your exported XML file
               - Choose your desired output format
               - Select where to save the converted file
               - Click "Convert" to process your library
            
            ### Notes
            - The macOS version is unsigned - follow the instructions above to open it
            - Windows Defender or SmartScreen may show a warning - this is normal for unsigned applications
            - For any issues, please create a ticket in the Issues section
            
            ### Requirements
            - macOS 10.15 or later
            - Windows 10 or later
            - For Linux: Python 3.8 or later with pandas and requests packages