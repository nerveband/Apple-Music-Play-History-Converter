name: Build Application

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            output_name: "Apple Music History Converter"
          - os: windows-latest
            output_name: "Apple Music History Converter.exe"
          - os: macos-latest
            output_name: "Apple Music History Converter"

    steps:
    # Initial Setup
    - name: Create .gitignore
      shell: bash
      run: |
        mkdir -p ${{ github.workspace }}
        cd ${{ github.workspace }}
        cat > .gitignore << 'EOL'
        dist/
        build/
        *.spec
        Icon
        Icon?
        Icon*
        .DS_Store
        __pycache__/
        *.pyc
        EOL

    # Source Checkout
    - uses: actions/checkout@v4
      with:
        clean: true

    # Create gitignore to exclude build artifacts and system files
    - name: Setup gitignore
      shell: bash
      run: |
        cat > .gitignore << 'EOL'
        dist/
        build/
        *.spec
        Icon?
        Icon\r
        Icon*
        .DS_Store
        __pycache__/
        *.pyc
        EOL

    # Clean existing problematic files
    - name: Clean problematic files
      shell: bash
      run: |
        find . -type f -name 'Icon?' -delete || true
        find . -type f -name 'Icon' -delete || true
        find . -type f -name 'Icon*' -delete || true
        find . -type f -name '.DS_Store' -delete || true

    # Windows Git Configuration
    - name: Configure Git (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        git config --global core.protectNTFS false
        git config --global core.autocrlf input
        git config --global core.safecrlf false
        git config --system core.longpaths true

    # Clean any existing artifacts
    - name: Clean workspace (Unix)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        rm -rf dist/ build/ *.spec || true
        find . -type f -name 'Icon?' -delete || true
        find . -type f -name 'Icon' -delete || true
        find . -type f -name 'Icon*' -delete || true
        find . -name "__pycache__" -exec rm -rf {} + || true
        find . -name "*.pyc" -delete || true

    - name: Clean workspace (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        $ErrorActionPreference = 'SilentlyContinue'
        if (Test-Path dist) { Remove-Item -Force -Recurse dist }
        if (Test-Path build) { Remove-Item -Force -Recurse build }
        Get-ChildItem -Filter "*.spec" -File | Remove-Item -Force
        Get-ChildItem -Recurse -Filter "Icon*" | Remove-Item -Force
        Get-ChildItem -Recurse -Filter "__pycache__" -Directory | Remove-Item -Force -Recurse
        Get-ChildItem -Recurse -Filter "*.pyc" -File | Remove-Item -Force

    # Build Environment Setup
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # Dependencies
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests pyinstaller

    # Build
    - name: Build with PyInstaller
      run: |
        pyinstaller --clean --onefile --windowed --name "Apple Music History Converter" apple_music_play_history_converter.py

    # Artifact Upload
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: dist/*
        if-no-files-found: error

  # Release Creation
  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
          draft: true
          prerelease: false
          name: "v2.0.1"
          tag_name: "v2.0.1"
          body: |
            **Apple Music History Converter v2.0.1**
            
            This release includes builds for:
            - macOS (Apple Silicon/Intel)
            - Windows (x64)
            - Linux (x64)
            
            Please report any issues in the Issues section.