version: 1.3.1.{build}

# Build on all 3 platforms (FREE for open source!)
image:
  - Visual Studio 2022      # Windows
  - Ubuntu2204              # Linux (22.04 to avoid 24.04 GTK issues)
  - macos-monterey          # macOS

# Environment
environment:
  PYTHON: "C:\\Python312"
  PYTHON_VERSION: "3.12"
  PYTHON_ARCH: "64"

# Only build on specific branches
branches:
  only:
    - main
    - feature/ui-rewrite

# Don't build on tag pushes
skip_tags: false

# Install dependencies
install:
  # Windows
  - cmd: SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
  - cmd: python --version
  - cmd: python -m pip install --upgrade pip
  - cmd: pip install briefcase

  # Linux - Install system dependencies first
  - sh: |
      if [ "$APPVEYOR_BUILD_WORKER_IMAGE" = "Ubuntu2204" ]; then
        sudo apt-get update
        sudo apt-get install -y \
          python3 \
          python3-pip \
          libgirepository1.0-dev \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf-2.0-dev \
          libffi-dev \
          shared-mime-info \
          gobject-introspection \
          libgtk-3-dev
        pip3 install --upgrade pip
        pip3 install briefcase
      fi

  # macOS
  - sh: |
      if [[ "$APPVEYOR_BUILD_WORKER_IMAGE" == macos* ]]; then
        python3 --version
        pip3 install --upgrade pip
        pip3 install briefcase
      fi

# Build steps
build_script:
  # Windows
  - cmd: echo Building for Windows...
  - cmd: briefcase create windows
  - cmd: briefcase build windows
  - cmd: briefcase package windows --adhoc-sign

  # Linux
  - sh: |
      if [ "$APPVEYOR_BUILD_WORKER_IMAGE" = "Ubuntu2204" ]; then
        echo "Building for Linux..."
        briefcase create linux appimage
        briefcase build linux appimage
        briefcase package linux appimage
      fi

  # macOS
  - sh: |
      if [[ "$APPVEYOR_BUILD_WORKER_IMAGE" == macos* ]]; then
        echo "Building for macOS..."
        briefcase create macOS
        briefcase build macOS
        briefcase package macOS --adhoc-sign
      fi

# Test step (optional)
test_script:
  - cmd: echo "Windows build complete"
  - sh: echo "Unix build complete"

# Collect artifacts
artifacts:
  # Windows MSI
  - path: 'dist\*.msi'
    name: WindowsInstaller
    type: File

  # Linux AppImage
  - path: 'dist/*.AppImage'
    name: LinuxAppImage
    type: File

  # macOS DMG
  - path: 'dist/*.dmg'
    name: macOSDMG
    type: File

# Deployment (optional - for releases)
# deploy:
#   - provider: GitHub
#     auth_token:
#       secure: YOUR_ENCRYPTED_GITHUB_TOKEN
#     artifact: /.*\.(dmg|msi|AppImage)/
#     on:
#       branch: main
#       appveyor_repo_tag: true

# Notifications
notifications:
  - provider: Email
    to:
      - nerveband@gmail.com
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true
